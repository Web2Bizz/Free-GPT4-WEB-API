name: Deploy to Production

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

jobs:
  run_pull:
    name: run pull
    runs-on: ubuntu-latest

    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.PROD_HOST }} > ~/.ssh/known_hosts
      - name: connect and pull
        run: |
          ssh -p ${{ secrets.PROD_PORT }} ${{ secrets.PROD_USERNAME }}@${{ secrets.PROD_HOST }} \
          "cd ${{ secrets.PROD_APP_PATH }} && \
          git checkout main && \
          git pull"

  build_containers:
    needs: run_pull
    runs-on: ubuntu-latest
    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.PROD_HOST }} > ~/.ssh/known_hosts
      - name: building docker images
        run: |
          ssh ${{ secrets.PROD_USERNAME }}@${{ secrets.PROD_HOST }} \
          "cd ${{ secrets.PROD_APP_PATH }} && \
           sudo docker compose \
          -f ./docker-compose.prod.yml \
          -p prod \
          up -d --build"

  clear_old_versions:
    needs: build_containers
    runs-on: ubuntu-latest
    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.PROD_HOST }} > ~/.ssh/known_hosts
      - name: prune all
        run: |
          ssh ${{ secrets.PROD_USERNAME }}@${{ secrets.PROD_HOST }} \
          "sudo docker system prune -a"
  clean_up:
    needs: clear_old_versions
    runs-on: ubuntu-latest
    steps:
      - name: clean up
        run: rm -rf ~/.ssh